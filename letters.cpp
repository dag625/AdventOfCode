//
// Created by Daniel Garcia on 12/10/2022.
//

#include "letters.h"

#include <array>
#include <algorithm>

namespace aoc {

    namespace {

        struct letter_data {
            char letter;
            std::array<char, 30> data;
        };

    }

    char to_char(const std::vector<stride_span<const char>>& cols) {
        constexpr std::array<letter_data, 28> letters = {{
                                                                 {'A', {'.','#','#','#','#','#',    '#','.','.','#','.','.',    '#','.','.','#','.','.',    '.','#','#','#','#','#',    '.','.','.','.','.','.'}},
                                                                 {'B', {'#','#','#','#','#','#',    '#','.','#','.','.','#',    '#','.','#','.','.','#',    '.','#','.','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'C', {'.','#','#','#','#','.',    '#','.','.','.','.','#',    '#','.','.','.','.','#',    '.','#','.','.','#','.',    '.','.','.','.','.','.'}},
                                                                 {'D', {'#','#','#','#','#','#',    '#','.','.','.','.','#',    '#','.','.','.','.','#',    '.','#','#','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'E', {'#','#','#','#','#','#',    '#','.','#','.','.','#',    '#','.','#','.','.','#',    '#','.','.','.','.','#',    '.','.','.','.','.','.'}},
                                                                 {'F', {'#','#','#','#','#','#',    '#','.','#','.','.','.',    '#','.','#','.','.','.',    '#','.','.','.','.','.',    '.','.','.','.','.','.'}},
                                                                 {'G', {'.','#','#','#','.','#',    '#','.','.','.','.','#',    '#','.','.','#','.','#',    '.','#','.','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'H', {'#','#','#','#','#','#',    '.','.','#','.','.','.',    '.','.','#','.','.','.',    '#','#','#','#','#','#',    '.','.','.','.','.','.'}},
                                                                 {'I', {'#','.','.','.','.','.',    '#','#','#','.','.','.',    '#','.','.','#','#','#',    '.','.','.','.','.','#',    '.','.','.','.','.','.'}},
                                                                 {'J', {'.','.','.','.','#','.',    '.','.','.','.','.','#',    '#','.','.','.','.','#',    '#','#','#','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'K', {'#','#','#','#','#','#',    '.','.','#','#','.','.',    '.','#','.','.','#','.',    '#','.','.','.','.','#',    '.','.','.','.','.','.'}},
                                                                 {'K', {'#','#','#','#','#','#',    '.','.','#','.','.','.',    '.','#','.','#','#','.',    '#','.','.','.','.','#',    '.','.','.','.','.','.'}},
                                                                 {'L', {'#','#','#','#','#','#',    '.','.','.','.','.','#',    '.','.','.','.','.','#',    '.','.','.','.','.','#',    '.','.','.','.','.','.'}},
                                                                 {'M', {'#','#','#','#','#','#',    '.','#','#','.','.','.',    '.','#','#','.','.','.',    '#','#','#','#','#','#',    '.','.','.','.','.','.'}},
                                                                 {'N', {'#','#','#','#','#','#',    '.','#','#','.','.','.',    '.','.','.','#','#','.',    '#','#','#','#','#','#',    '.','.','.','.','.','.'}},
                                                                 {'O', {'.','#','#','#','#','.',    '#','.','.','.','.','#',    '#','.','.','.','.','#',    '.','#','#','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'P', {'#','#','#','#','#','#',    '#','.','.','#','.','.',    '#','.','.','#','.','.',    '.','#','#','.','.','.',    '.','.','.','.','.','.'}},
                                                                 {'Q', {'.','#','#','#','#','.',    '#','.','.','.','.','#',    '#','.','.','.','#','#',    '.','#','#','#','#','#',    '.','.','.','.','.','.'}},
                                                                 {'R', {'#','#','#','#','#','#',    '#','.','.','#','.','.',    '#','.','.','#','#','.',    '.','#','#','.','.','#',    '.','.','.','.','.','.'}},
                                                                 {'S', {'.','#','.','.','#','.',    '#','.','.','#','.','#',    '#','.','#','.','.','#',    '.','#','.','.','#','.',    '.','.','.','.','.','.'}},
                                                                 {'T', {'#','.','.','.','.','.',    '#','#','#','.','.','.',    '#','.','.','#','#','#',    '#','.','.','.','.','.',    '.','.','.','.','.','.'}},
                                                                 {'U', {'#','#','#','#','#','.',    '.','.','.','.','.','#',    '.','.','.','.','.','#',    '#','#','#','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'V', {'#','#','#','.','.','.',    '.','.','.','#','#','#',    '.','.','.','#','#','#',    '#','#','#','.','.','.',    '.','.','.','.','.','.'}},
                                                                 {'W', {'#','#','#','.','.','.',    '.','.','.','#','#','#',    '.','.','.','#','#','#',    '#','#','#','.','.','.',    '.','.','.','.','.','.'}},
                                                                 {'X', {'#','#','.','.','#','#',    '.','.','#','#','.','.',    '.','.','#','#','.','.',    '#','#','.','.','#','#',    '.','.','.','.','.','.'}},
                                                                 {'Y', {'#','#','.','.','.','.',    '.','.','#','.','.','.',    '.','.','#','.','.','#',    '#','#','#','#','#','.',    '.','.','.','.','.','.'}},
                                                                 {'Y', {'#','#','.','.','.','.',    '.','.','#','.','.','.',    '.','.','.','#','#','#',    '.','.','#','.','.','.',    '#','#','.','.','.','.'}},
                                                                 {'Z', {'#','.','.','.','#','#',    '#','.','.','#','.','#',    '#','.','#','.','.','#',    '#','#','.','.','.','#',    '.','.','.','.','.','.'}}
                                                         }};
        if (cols.size() != 5 && !std::all_of(cols.begin(), cols.end(), [](const auto& col){ return col.size() == 6; })) { return '\0'; }
        for (const auto& letter : letters) {
            auto current = letter.data.begin();
            bool matches = true;
            for (const auto& col : cols) {
                for (const char c : col) {
                    if (*current != c) {
                        matches = false;
                        break;
                    }
                    ++current;
                }
            }
            if (matches) {
                return letter.letter;
            }
        }
        return  '\0';
    }

    std::string letters_from_grid(const grid<char>& g) {
        std::string retval;
        for (std::size_t col = 0; col < g.num_cols();) {
            std::vector<stride_span<const char>> cols;
            for (int i = 0; i < 5; ++i, ++col) {
                cols.push_back(g.const_column_span(col));
            }
            const auto c = to_char(cols);
            retval.push_back(c);
        }
        return retval;
    }

} /* namespace aoc */